// Mocks generated by Mockito 5.4.5 from annotations
// in dhan_saarthi/test/feature/intro/data/repository/mock_intro_local_data_source.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import 'mock_intro_local_data_source.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MyIntroLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyIntroLocalDataSource extends _i1.Mock
    implements _i2.MyIntroLocalDataSource {
  MockMyIntroLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isIntroCompleted =>
      (super.noSuchMethod(
            Invocation.getter(#isIntroCompleted),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> setIntroCompleted() =>
      (super.noSuchMethod(
            Invocation.method(#setIntroCompleted, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
