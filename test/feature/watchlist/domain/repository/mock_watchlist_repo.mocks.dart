// Mocks generated by Mockito 5.4.5 from annotations
// in dhan_saarthi/test/feature/watchlist/domain/repository/mock_watchlist_repo.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dhan_saarthi/core/failure.dart' as _i5;
import 'package:dhan_saarthi/feature/watchlist/domain/enities/fund_entity.dart'
    as _i7;
import 'package:dhan_saarthi/feature/watchlist/domain/enities/watchlist_entity.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

import 'mock_watchlist_repo.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WatchlistRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepo extends _i1.Mock implements _i3.WatchlistRepo {
  MockWatchlistRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.WatchlistEntity>>>
  getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.Failure, List<_i6.WatchlistEntity>>
            >.value(
              _FakeEither_0<_i5.Failure, List<_i6.WatchlistEntity>>(
                this,
                Invocation.method(#getWatchlist, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.WatchlistEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addWatchlist(
    String? watchlist,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [watchlist]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#addWatchlist, [watchlist]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateWatchlist({
    required String? oldName,
    required String? newName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateWatchlist, [], {
              #oldName: oldName,
              #newName: newName,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#updateWatchlist, [], {
                  #oldName: oldName,
                  #newName: newName,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteWatchlist(
    String? watchlist,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteWatchlist, [watchlist]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#deleteWatchlist, [watchlist]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addFund({
    required String? watchlist,
    required _i7.FundEntity? fund,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addFund, [], {
              #watchlist: watchlist,
              #fund: fund,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#addFund, [], {
                  #watchlist: watchlist,
                  #fund: fund,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteFund({
    required String? watchlist,
    required _i7.FundEntity? fund,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFund, [], {
              #watchlist: watchlist,
              #fund: fund,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#deleteFund, [], {
                  #watchlist: watchlist,
                  #fund: fund,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}
