// Mocks generated by Mockito 5.4.5 from annotations
// in dhan_saarthi/test/feature/auth/data/repository/mock_auth_remote.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dhan_saarthi/feature/auth/data/models/user_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'mock_auth_remote.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemote extends _i1.Mock implements _i3.AuthRemote {
  MockAuthRemote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> sendOTP(String? phoneNo) =>
      (super.noSuchMethod(
            Invocation.method(#sendOTP, [phoneNo]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserModel> verifyOTP(String? otp, String? phone) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [otp, phone]),
            returnValue: _i4.Future<_i2.UserModel>.value(
              _FakeUserModel_0(
                this,
                Invocation.method(#verifyOTP, [otp, phone]),
              ),
            ),
          )
          as _i4.Future<_i2.UserModel>);

  @override
  _i2.UserModel currentUser() =>
      (super.noSuchMethod(
            Invocation.method(#currentUser, []),
            returnValue: _FakeUserModel_0(
              this,
              Invocation.method(#currentUser, []),
            ),
          )
          as _i2.UserModel);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
